fulldata = read.csv("activity.csv",header = TRUE,sep = ",",na.strings = "NA")
View(fulldata)
summary(fulldata)
library(lubridate)
library(dplyr)
fulldata$date = ymd(fulldate$date)
fulldata$date = ymd(fulldata$date)
fulldata = tbl_df(fulldata)
fulldata %>% group_by(date) %>% mutate(totalsteps = sum(na.rm = TRUE))
fulldata %>% group_by(date) %>% mutate(totalsteps = sum(steps,na.rm = TRUE))
fulldata %>% select(steps,date) %>% group_by(date) %>% mutate(totalsteps = sum(steps,na.rm = TRUE))
fulldata %>% select(steps,date) %>% group_by(date)
fulldata %>% select(steps,date) %>% group_by(date) %>% summarize(steps,sum(na.rm=TRUE))
fulldata %>% select(steps,date) %>% group_by(date) %>% summarize(steps,sum())
?summarize
fulldata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps,na.rm=TRUE))
fulldata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps,na.rm=FALSE))
fulldata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps,na.rm=TRUE))
sum_data = fulldata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps,na.rm=TRUE))
View(sum_data)
hist(sum_data$totalsteps)
hist(sum_data$totalsteps,xlab = "Total Steps per day")
hist(sum_data$totalsteps,xlab = "Total Steps per day",breaks = 10)
hist(sum_data$totalsteps,xlab = "Total Steps per day",breaks = 10,col = "red")
hist(sum_data$totalsteps,xlab = "Total Steps per day",breaks = 10,col = "red",main = "Histogram of the Total Number of Steps per day")
meanSteps = mean(sum_data$totalsteps,na.rm = TRUE)
medianSteps = median(sum_data$totalsteps,na.rm = TRUE)
meanSteps = mean(sum_data$totalsteps,na.rm = F)
medianSteps = median(sum_data$totalsteps,na.rm = F)
meanSteps = mean(sum_data$totalsteps,na.rm = F)
medianSteps = median(sum_data$totalsteps,na.rm = F)
TRUE
avg_data = fulldata %>% select(steps,interval) %>% group_by(interval) %>% summarize(avgsteps = mean(steps,na.rm=TRUE))
View(avg_data)
with(avg_data,plot(avgsteps~interval,type = "l"))
with(avg_data,plot(avgsteps~interval,type = "l",ylab = "Average No. of Steps",xlab = "Time Interval",main = "Average number of steps per time interval"))
maxInterval = avg_data$interval[max(avg_data$avgsteps)]
# To impute missing data, we will use the mean for the relavant 5min interval for the day
newdata = select(fulldata,steps,interval)
imputeData = function(x1,x2){
if(is.na(x1)){
x1 = avg_data[avg_data[,1] == x2,2]
}
else
x1 = x1
}
newdata$steps = sapply(newdata,imputeData)
newdata = select(fulldata,steps,interval)
## Reproducible Research Course Project 1
library(lubridate)
library(dplyr)
newdata = select(fulldata,steps,interval)
imputeData = function(x1,x2){
if(is.na(x1)){
x1 = avg_data[avg_data[,1] == x2,2]
}
else
x1 = x1
}
newdata$steps = sapply(newdata,imputeData)
View(newdata)
newdata$steps = sapply(newdata,function(x1,x2){
if(is.na(x1)){
x1 = avg_data[avg_data[,1] == x2,2]
}
else
x1 = x1
})
newdata$steps = sapply(newdata,function(x){
if(is.na(x$steps)){
x = avg_data[avg_data[,1] == x$interval,2]
}
else
x$steps = x$steps
})
newdata = sapply(newdata,function(x){
if(is.na(x$steps)){
x = avg_data[avg_data[,1] == x$interval,2]
}
else
x$steps = x$steps
})
newdata = mutate(newdata, steps = imputeData(steps,interval))
?mutate
newdata = mutate(newdata, Tsteps = imputeData(steps,interval))
View(newdata)
newdata$Tsteps[is.na(newdata$steps)] = avg_data$avgsteps[avg_data$interval == newdata$interval]
t1 = mapply(imputeData,newdata$steps,newdata$interval)
t1 = as.data.frame(mapply(imputeData,newdata$steps,newdata$interval))
View(t1)
t1 = mapply(imputeData,newdata$steps,newdata$interval,SIMPLIFY = TRUE)
View(t1)
?mapply
t1 = t(as.data.frame(mapply(imputeData,newdata$steps,newdata$interval,SIMPLIFY = TRUE)))
View(t1)
rownames(t1) = NULL
summary(t1)
cbind(newdata,t1)
newdata = cbind(newdata,t1)
utils::View(avg_data)
newdata = select(fulldata,steps,interval)
imputeData = function(x1,x2){
if(is.na(x1)){
x1 = avg_data[avg_data[,1] == x2,2]
}
else
x1 = x1
}
t1 = t(as.data.frame(mapply(imputeData,newdata$steps,newdata$interval,SIMPLIFY = TRUE)))
rownames(t1) = NULL
newdata$steps = t1
View(newdata)
newdata = fulldata
imputeData = function(x1,x2){
if(is.na(x1)){
x1 = avg_data[avg_data[,1] == x2,2]
}
else
x1 = x1
}
## This applies a custom function to the data and returns the mean of the interval if the original input is NA
t1 = t(as.data.frame(mapply(imputeData,newdata$steps,newdata$interval,SIMPLIFY = TRUE)))
# Removing rownames to save storage space
rownames(t1) = NULL
# Overwriting the original data with the new imputed data
newdata$steps = t1
sum_data_new = newdata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps,na.rm=TRUE))
hist(sum_data$totalsteps,
xlab = "Total Steps per day",
breaks = 10,col = "red",
main = "Histogram of the Total Number of Steps per day")
sum_data = fulldata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps,na.rm=TRUE))
## Histogram of the total number of steps taken each day
hist(sum_data$totalsteps,
xlab = "Total Steps per day",
breaks = 10,col = "red",
main = "Histogram of the Total Number of Steps per day")
qplot(sumdata)
library(ggplot2)
qplot(sumdata)
qplot(sum_data)
qplot(sum_data,stat = "identity")
View(sum_data)
qplot(sum_data)
?qplot
qplot(x = sum_data$date,y=sum_data$totalsteps)
ggplot(data = sum_data,aes(x = date,y = totalsteps)) + geom_histogram(stat = "identity")
ggplot(data = sum_data_new,aes(x = date,y = totalsteps)) + geom_histogram(stat = "identity")
ggplot(data = sum_data_new,aes(x = date,y = totalsteps)) + geom_histogram(stat = "identity")
summary(sum_data_new)
View(sum_data_new)
sum_data_new = newdata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps))
sum_data_new = newdata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps))
ggplot(data = sum_data_new,aes(x = date,y = totalsteps)) + geom_histogram(stat = "identity")
stepsByDay <- tapply(fulldata$steps, fulldata$date, sum, na.rm=TRUE)
qplot(stepsByDay, xlab='Total steps per day', ylab='Frequency using binwith 500', binwidth=500)
qplot(stepsByDay, xlab='Total steps per day', ylab='Frequency using binwith 500')
hist(sum_data$totalsteps,
xlab = "Total Steps per day",
breaks = 500,col = "red",
main = "Histogram of the Total Number of Steps per day")
hist(sum_data$totalsteps,
xlab = "Total Steps per day",
breaks = 500,col = "red",
main = "Histogram of the Total Number of Steps per day")
sum_data_new = newdata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps))
hist(sum_data_new$totalsteps,
xlab = "Total Steps per day",
breaks = 500,col = "red",
main = "Histogram of the Total Number of Steps per day")
sum_data_new = newdata %>% select(steps,date) %>% group_by(date) %>% summarize(totalsteps = sum(steps))
## Histogram of the total number of steps taken each day
hist(sum_data_new$totalsteps,
xlab = "Total Steps per day",
breaks = 500,col = "red",
main = "Histogram of the Total Number of Steps per day")
summary(newdata)
View(sum_data)
View(newdata)
summary(fulldata)
colnames(newdata)
summary(newdata)
names(newdata)
View(sum_data_new)
